services:
  postgres-db:
    image: postgres:14
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/00-init.sql
      - ./postgres/seed.sh:/docker-entrypoint-initdb.d/10-seed.sh
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=assword
      - POSTGRES_DB=user-db

  mongo-db:
    image: mongo:5.0.31-focal
    volumes:
      - ./mongo/init.js:/docker-entrypoint-initdb.d/00-init.js
    ports:
      - 27017:27017

  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile
      args:
        host_uid: ${HOST_UID:-1000}
    ports:
      - '8080:8080'
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined
    depends_on:
      - postgres-db

  shop-service:
    build:
      context: .
      dockerfile: shop-service/Dockerfile
      args:
        host_uid: ${HOST_UID:-1000}
    ports:
      - '8081:8080'
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined
    depends_on:
      - mongo-db

  cart-service:
    build:
      context: .
      dockerfile: cart-service/Dockerfile
      args:
        host_uid: ${HOST_UID:-1000}
    ports:
      - '8082:8080'
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined

  swagger-ui:
    image: docker.swagger.io/swaggerapi/swagger-ui
    ports:
      - '8000:8080'
    volumes:
      - ./openapi-spec.yaml:/openapi-spec.yaml
    environment:
      - SWAGGER_JSON=/openapi-spec.yaml
